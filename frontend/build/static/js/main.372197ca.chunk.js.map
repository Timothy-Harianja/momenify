{"version":3,"sources":["components/login/login.jsx","components/signup/signup.jsx","components/post-item/post-item.jsx","components/posts-container/posts-container.jsx","components/body/body.jsx","components/header/header.jsx","components/active/active.jsx","components/404/404.jsx","components/active/confirmation.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Login","state","email","password","message","tryLogin","obj","console","log","props","axios","post","then","res","data","success","alert","setState","catch","err","submitHandler","e","preventDefault","className","onSubmit","this","FormGroup","controlId","bsSize","FormLabel","FormControl","autoFocus","type","onChange","target","value","Button","onClick","id","Component","makeTime","ts","Date","now","date_ob","getDate","getMonth","getFullYear","makeToken","length","result","characters","charactersLength","i","charAt","Math","floor","random","Signup","nickname","activation","activeToken","activeTokenExpire","lastLogin","putDataToUsers","json","window","location","placeholder","getTime","href","onSelect","setBody","PostItem","imageUrl","src","alt","PostsContainer","posts","loading","refs","infiniteScroll","addEventListener","scrollTop","clientHeight","scrollHeight","loadMorePosts","push","key","setTimeout","ref","showPosts","Body","Styles","styled","div","Header","Navbar","expand","Brand","Form","Toggle","aria-controls","Collapse","Nav","Item","Link","Active","body","confirm","Wrapper","NoMatch","Confirmation","App","api","Fragment","exact","path","component","Home","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.372197ca.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport \"./login.css\";\nimport axios from \"axios\";\n\nclass Login extends Component {\n  state = {\n    email: null,\n    password: null,\n    message: null\n  };\n\n  tryLogin = obj => {\n    console.log(\"obj\", obj);\n    console.log(\"props: \", this.props);\n    axios\n      .post(\"/api/loginRoute/login\", obj)\n      .then(res => {\n        if (res.data.success == true) {\n          alert(\"password matches\");\n          this.setState({\n            message: \"login success\"\n          });\n        } else {\n          this.setState({\n            message: \"username or password incorrect\"\n          });\n          // console.log(\"password not correct:v\", res.data.emailStatus);\n          // this.setState({\n          //   passwordStatus: <span id=\"alert\">{res.data.passwordStatus}</span>\n          // });\n          // alert(\n          //   \"password does not matches or the account is not yet activated!\"\n          // );\n        }\n      })\n      .catch(err => {\n        console.log(\"error of catch:\", err);\n      });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n  };\n\n  render() {\n    return (\n      <div className=\"Login\">\n        <form onSubmit={this.submitHandler}>\n          <h3>Login</h3>\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            <FormLabel>Email</FormLabel>\n            <FormControl\n              autoFocus\n              type=\"email\"\n              //   value=\"\"\n              onChange={e => this.setState({ email: e.target.value })}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            <FormLabel>Password </FormLabel>\n            <FormControl\n              //   value={password}\n              onChange={e => this.setState({ password: e.target.value })}\n              type=\"password\"\n            />\n          </FormGroup>\n          <Button\n            type=\"submit\"\n            onClick={() =>\n              this.tryLogin({\n                email: this.state.email,\n                password: this.state.password\n              })\n            }\n          >\n            Login\n          </Button>\n        </form>\n\n        <div id=\"message\">{this.state.message}</div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport \"./signup.css\";\nimport axios from \"axios\";\nimport Login from \"../login/login.jsx\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction makeTime() {\n  let ts = Date.now();\n  let date_ob = new Date(ts);\n  let date = date_ob.getDate();\n  let month = date_ob.getMonth() + 1;\n  let year = date_ob.getFullYear();\n  return month + \"-\" + \"date\" + \"-\" + year;\n}\n\nfunction makeToken(length) {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nclass Signup extends Component {\n  state = {\n    nickname: null,\n    password: null,\n    email: null,\n    activation: false,\n    activeToken: null,\n    activeTokenExpire: null,\n    lastLogin: null\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n  };\n\n  putDataToUsers = json => {\n    console.log(\"this.json:\", json);\n    console.log(\"this.props:\", this.props);\n    axios\n      .post(\"/api/signupRoute/putUser\", json)\n      .then(res => {\n        console.log(\"res: \", res);\n        console.log(\"res data: \", res.data);\n\n        if (res.data.success) {\n          window.location = \"/confirmation\";\n\n          // return <Redirect to=\"/login\" />;\n        } else {\n          alert(\"failed\");\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"SignUp\">\n        <form onSubmit={this.submitHandler}>\n          <h3>Sign Up</h3>\n\n          <div className=\"form-group\">\n            <label>Nickname</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"First name\"\n              onChange={e => this.setState({ nickname: e.target.value })}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Email address</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Enter email\"\n              onChange={e => this.setState({ email: e.target.value })}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Password\"\n              onChange={e => this.setState({ password: e.target.value })}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary btn-block\"\n            onClick={() => {\n              this.putDataToUsers({\n                nickname: this.state.nickname,\n                password: this.state.password,\n                email: this.state.email,\n                activation: this.state.activation,\n                lastLogin: makeTime(),\n                activeToken: makeToken(30),\n                activeTokenExpire: new Date().getTime() + 24 * 60 * 60 * 1000\n              });\n            }}\n          >\n            Sign Up\n          </button>\n          <p className=\"forgot-password text-right\">\n            Already registered{\" \"}\n            <a\n              href=\"#login\"\n              onSelect={() => {\n                this.props.setBody(<Login />);\n              }}\n            >\n              sign in?\n            </a>\n          </p>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\n\nimport './post-item.css'\n\nconst PostItem = ({imageUrl}) => (\n     <img className='post-item' src={imageUrl} alt='post'/>\n);\n\nexport default PostItem;","import React, { Component } from \"react\";\n\nimport PostItem from \"../post-item/post-item\";\n\nimport \"./posts-container.css\";\n\nclass PostsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: 3,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    //Detect when scrolled to bottom\n    this.refs.infiniteScroll.addEventListener(\"scroll\", () => {\n      if (\n        this.refs.infiniteScroll.scrollTop +\n          this.refs.infiniteScroll.clientHeight >=\n        this.refs.infiniteScroll.scrollHeight\n      ) {\n        this.loadMorePosts();\n      }\n    });\n  }\n\n  showPosts() {\n    // get all the posts from the\n    var posts = [];\n    for (var i = 0; i < this.state.posts; i++) {\n      posts.push(\n        <div key={i} className=\"post\">\n          <PostItem imageUrl=\"https://images.pexels.com/photos/414612/pexels-photo-414612.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" />\n        </div>\n      );\n    }\n    return posts;\n  }\n\n  loadMorePosts() {\n    this.setState({ loading: true });\n    setTimeout(() => {\n      this.setState({ posts: this.state.posts + 2, loading: false });\n    }, 2000);\n  }\n\n  render() {\n    return (\n      <div className=\"posts-container\" ref=\"infiniteScroll\">\n        {this.showPosts()}\n        {this.state.loading ? (\n          <p className=\"loading-text\">loading more posts...</p>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PostsContainer;\n","import React, { Component } from \"react\";\n\nimport PostsContainer from '../posts-container/posts-container';\n\nimport './body.css'\n\nclass Body extends Component {\n  render() {\n    return ( \n      <div className='home-page'>\n        <div className='main-posts-container'>\n          <PostsContainer/>\n        </div>\n        <div className='side-posts-container'>\n          <PostsContainer/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Body;\n","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport { Nav } from \"react-bootstrap\";\nimport { NavDropdown } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { FormControl } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Login from \"../login/login.jsx\";\nimport Signup from \"../signup/signup.jsx\";\nimport Body from \"../body/body.jsx\";\nimport \"./header.css\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  .navbar {\n    background-color: #e3ebfd;\n  }\n  a,\n  .navbar-nav,\n  .navbar-light .nav-link {\n    color: black;\n    &:hover {\n      color: white;\n    }\n  }\n  .navbar-brand {\n    font-size: 1.4em;\n    color: black;\n    &:hover {\n      color: white;\n    }\n  }\n  .form-center {\n    position: absolute !important;\n    left: 25%;\n    right: 25%;\n  }\n`;\n\nclass Header extends Component {\n  render() {\n    return (\n      <Styles>\n        <Navbar expand=\"lg\">\n          <Navbar.Brand href=\"/\">Momenify</Navbar.Brand>\n          <Form className=\"form-center\">\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"\" />\n          </Form>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <Nav.Item>\n                <Nav.Link href=\"/login\">Login</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link href=\"/signup\">Sign Up</Nav.Link>\n              </Nav.Item>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </Styles>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport \"./active.css\";\nclass Active extends Component {\n  state = {\n    body: null\n  };\n  confirm = () => {\n    axios\n      .post(\"/api/activeRoute/active\")\n      .then(data => {\n        console.log(\"this is true or false: \" + data.data.message);\n        this.setState({\n          body: <div id=\"buttom-text\">{data.data.message}</div>\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  render() {\n    return (\n      <div id=\"active-body\">\n        <div id=\"top-text\">\n          By clicking the button, you agree the policy of using our webpage\n        </div>\n        <Button id=\"active-button\" type=\"submit\" onClick={() => this.confirm()}>\n          Activate\n        </Button>\n        {this.state.body}\n      </div>\n    );\n  }\n}\n\nexport default Active;\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst Wrapper = styled.div`\n  margin-top: 1em;\n  margin-left: 6em;\n  margin-right: 6em;\n`;\nexport const NoMatch = () => (\n  <Wrapper>\n    <h2>404 Not Found!</h2>\n  </Wrapper>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst Wrapper = styled.div`\n  margin-top: 1em;\n  margin-left: 6em;\n  margin-right: 6em;\n`;\nexport const Confirmation = () => (\n  <Wrapper>\n    <h2>\n      An confirmation link has been sent to your email, please activate in 24\n      hours!\n    </h2>\n  </Wrapper>\n);\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/header/header.jsx\";\nimport Body from \"./components/body/body.jsx\";\nimport Active from \"./components/active/active.jsx\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/body/body.jsx\";\nimport Login from \"./components/login/login.jsx\";\nimport Signup from \"./components/signup/signup.jsx\";\nimport { NoMatch } from \"./components/404/404.jsx\";\nimport { Confirmation } from \"./components/active/confirmation.jsx\";\nclass App extends Component {\n  state = {\n    body: <Body />,\n    api: \"http://localhost:5000\"\n  };\n\n  setBody = obj => {\n    console.log(\"clicked\");\n    this.setState({ body: obj });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Router>\n          {/* <Sidebar /> */}\n          <Header></Header>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/active\" component={Active} />\n            <Route path=\"/confirmation\" component={Confirmation} />\n\n            <Route component={NoMatch} />\n          </Switch>\n        </Router>\n      </React.Fragment>\n      // <div style={{ backgroundColor: \"white\" }}>\n\n      //   {this.state.body}\n      //   {this.state.active}\n      // </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}